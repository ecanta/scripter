MACRO  HIDECURSOR
MACRO  _USE_MATH_DEFINES
MACRO  WIN32_LEAN_AND_MEAN
MACRO  NOMINMAX
MACRO  BUGS
MACRO  Y2D(X, Y, Z)
MACRO  X2D(X, Y, Z)
MACRO  FUNCTION_LABEL
MACRO  FUNCTION_DERIVATIVE
MACRO  FUNCTION_REMOVE
MACRO  MORE_EQUAL_THAN
MACRO  MORE_THAN
MACRO  LESS_EQUAL_THAN
MACRO  LESS_THAN
MACRO  BOOLALPHACHANGED
MACRO  CHANGEDVALUE
MACRO  GRAPHED
MACRO  stddef
MACRO  _SQ(x)
MACRO  Last(x)
MACRO  cstr(x)
MACRO  issign(x)
MACRO  integer(x)
MACRO  DECLARE_TIME_POINT(x)
MACRO  VXconverter(func, param)
MACRO  V1converter(func, param)
MACRO  ResetAttribute()
MACRO  _GetCursorPos()
MACRO  ret
MACRO  NEG
MACRO  POS
MACRO  HIDECURSOR
MACRO  IMPROVE
MACRO  UNOPT
MACRO  OPT
MACRO  RUIN

VAR  int __NULL__
VAR  HANDLE hConsole
VAR  HANDLE hConsoleInput
VAR  CONSOLE_CURSOR_INFO cursorInfo
VAR  CONSOLE_CURSOR_INFO cursor
VAR  CONSOLE_SCREEN_BUFFER_INFO csbi
VAR  static wchar_t charVariable
VAR  ptrdiff_t GlobalMax
VAR  const ptrdiff_t GLOBAL_CAP
VAR  bool BOOLALPHA
VAR  bool PRINTN
VAR  double CORRECTION_RATIO
VAR  atomic_bool GlobalInterr
VAR  atomic_bool interrupted
VAR  atomic_bool computing
VAR  atomic_bool IsDone
VAR  atomic_bool RunMonitor
VAR  condition_variable cv
VAR  condition_variable Cv
VAR  condition_variable MonitorCV
VAR  mutex CoutMutex
VAR  mutex mtx
VAR  mutex MonitorMTX
VAR  COORD Min
VAR  LARGE_INTEGER ProgramFrequency

STRUCT  compost:
	VAR  ptrdiff_t factors
	VAR  int exp

STRUCT  divisor:
	VAR  ptrdiff_t DivNumber
	VAR  ptrdiff_t DivSum
	VAR  ptrdiff_t DivProduct
	VAR  wstring Div_pr

STRUCT  digitRatio:
	VAR  int digitSumRatioNum
	VAR  int digitSumRatioDen
	VAR  int digitProductRatioNum
	VAR  int digitProductRatioDen

VAR  digitRatio items

STRUCT  coord:
	VAR  double X
	VAR  double Y
	FUNCT  coord()
	FUNCT  coord(double, double)
	FUNCT  coord(COORD)
	FUNCT  operator COORD()

ENUM  switchcase:
	ENUM_VAR  DoSimpleCode
	ENUM_VAR  DoComplexCode
	ENUM_VAR  DoSimpleFactor
	ENUM_VAR  DoComplexFactor
	ENUM_VAR  DoCodeFactor
	ENUM_VAR  DoAll
	ENUM_VAR  DebugSimpleCode
	ENUM_VAR  DebugComplexCode
	ENUM_VAR  DebugSimpleFactor
	ENUM_VAR  DebugComplexFactor
	ENUM_VAR  DebugCodeFactor
	ENUM_VAR  DebugAll
	ENUM_VAR  DebugDigits
	ENUM_VAR  DebugDigitsAndCode
	ENUM_VAR  DebugDigitsAndFactor
	ENUM_VAR  DebugComplete
	ENUM_VAR  ConvertCodeInverse
	ENUM_VAR  SeriesExpansion
	ENUM_VAR  FactorPolynomial
	ENUM_VAR  FractElaborator
	ENUM_VAR  FactorMatrix
	ENUM_VAR  Random
	ENUM_VAR  NotAssigned

VAR  switchcase usefree
VAR  unordered_map<wstring, switchcase> stringToEnumMap 
VAR  unordered_map<switchcase, wstring> enumToStringMap 
VAR  unordered_map<wstring, wstring> ConvertFromSuperScript 
VAR  wstring Variables
FUNCT  static bool Smaller<T>(const T&, const T&)
FUNCT  static ptrdiff_t BinarySearch<T>(const tensor<T>&, const T)

CLASS  complex<Ty>:
	VAR  Ty RealPart
	VAR  Ty ImaginaryPart
	FUNCT  Ty norm()
	FUNCT  complex()
	FUNCT  complex(Ty)
	FUNCT  complex(Ty, Ty)
	FUNCT  inline complex conjugate()
	FUNCT  inline complex opposite()
	FUNCT  complex operator+(complex)
	FUNCT  inline complex& operator+=(complex)
	FUNCT  inline complex& operator++()
	VAR  inline complex& operator++ 
	FUNCT  complex operator-(complex)
	FUNCT  inline complex& operator-=(complex)
	FUNCT  inline complex& operator--()
	VAR  inline complex& operator-- 
	FUNCT  complex operator*(complex)
	FUNCT  inline complex& operator*=(complex)
	FUNCT  complex operator/(complex)
	FUNCT  inline complex operator/=(complex)
	FUNCT  wstring str()
	FUNCT  friend wostream& operator<<(wostream&, const complex&)

FUNCT  static complex<Ty> InitExponentialForm<Ty>(Ty, Ty)
VAR  tensor<complex<long double>> Omega
FUNCT  static void FFT(tensor<complex<long double>>&, bool)

CLASS  big:
	VAR  tensor<int> Integer
	VAR  bool sign
	VAR  long double decimal
	FUNCT  void construct(ptrdiff_t)
	FUNCT  bool compare(const big&, const big&)
	FUNCT  big Add(const big&, const big&, bool)
	FUNCT  big Sub(const big&, const big&, bool)
	FUNCT  big AlgebricOperation1(const big&, const big&, bool)
	FUNCT  big FFT_Multiplication(const big&)
	FUNCT  t Number<t>()
	FUNCT  big()
	FUNCT  big(int)
	FUNCT  big(ptrdiff_t)
	FUNCT  big(double)
	FUNCT  big(long double)
	FUNCT  big(tensor<int>)
	FUNCT  big(wstring)
	FUNCT  big& operator=(const big&)
	FUNCT  inline bool operator==(const big&)
	FUNCT  inline bool operator!=(const big&)
	FUNCT  bool operator<(const big&)
	FUNCT  inline bool operator<=(const big&)
	FUNCT  inline bool operator>=(const big&)
	FUNCT  inline bool operator>(const big&)
	FUNCT  big operator+(const big&)
	FUNCT  inline big& operator+=(const big&)
	FUNCT  inline big& operator++()
	VAR  inline big& operator++ 
	FUNCT  big operator-(const big&)
	FUNCT  inline big& operator-=(const big&)
	FUNCT  inline big& operator--()
	VAR  inline big& operator-- 
	FUNCT  big operator<<(int)
	FUNCT  inline big& operator<<=(int)
	FUNCT  big operator>>(int)
	FUNCT  inline big& operator>>=(int)
	FUNCT  big operator*(const big&)
	FUNCT  inline big& operator*=(const big&)
	FUNCT  big operator/(const big&)
	FUNCT  inline big& operator/=(const big&)
	FUNCT  big operator%(const big&)
	FUNCT  inline big& operator%=(const big&)
	FUNCT  big operator^(const big&)
	FUNCT  inline big& operator^=(const big&)
	FUNCT  inline bool intg()
	FUNCT  inline big fabs()
	FUNCT  inline big floor()
	FUNCT  inline big ceil()
	FUNCT  inline big round()
	FUNCT  inline big invert()
	FUNCT  inline int log(int)
	FUNCT  wostringstream c_str(int)
	FUNCT  inline wstring str()
	FUNCT  friend wostream& operator<<(wostream&, const big&)

FUNCT  static big pow(big, int)
VAR  big LCM
FUNCT  void GeneralizedHeapify<T>(tensor<T>&, int, int)
FUNCT  void GeneralizedHeapSort<T>(tensor<T>&)

CLASS  radical:
	VAR  int coefficient
	VAR  ptrdiff_t Arg
	VAR  tensor<int> primes
	FUNCT  radical()
	FUNCT  radical(int)
	FUNCT  radical(int, int)
	FUNCT  radical(int, int, bool)
	FUNCT  int GetCoefficient()
	FUNCT  void SetCoefficient(int)
	FUNCT  void IncCoefficient(int)
	FUNCT  ptrdiff_t arg()
	FUNCT  long double approximation()
	FUNCT  void normalize()
	FUNCT  long double operator+(const radical&)
	FUNCT  long double operator-(const radical&)
	FUNCT  long double operator/(const radical&)
	FUNCT  radical operator*(const radical&)
	FUNCT  radical& operator*=(const radical&)
	FUNCT  bool negative()
	FUNCT  int len()
	FUNCT  void write(WORD, bool)

CLASS  RadicalSum:
	VAR  tensor<radical> elements
	FUNCT  RadicalSum()
	FUNCT  RadicalSum(radical)
	FUNCT  RadicalSum(tensor<radical>)
	FUNCT  long double approximation()
	FUNCT  void normalize()
	FUNCT  void NORMALIZE()
	FUNCT  long double operator/(const RadicalSum&)
	FUNCT  RadicalSum operator+(const RadicalSum&)
	FUNCT  RadicalSum& operator+=(const RadicalSum&)
	FUNCT  RadicalSum operator-(const RadicalSum&)
	FUNCT  RadicalSum& operator-=(const RadicalSum&)
	FUNCT  RadicalSum operator*(const RadicalSum&)
	FUNCT  RadicalSum& operator*=(const RadicalSum&)
	FUNCT  int len()
	FUNCT  void write(WORD)

CLASS  RadicalFract:
	VAR  RadicalSum top
	VAR  RadicalSum bottom
	FUNCT  RadicalFract()
	FUNCT  RadicalFract(RadicalSum)
	FUNCT  RadicalFract(RadicalSum, RadicalSum)
	FUNCT  long double approximation()
	FUNCT  RadicalFract operator+(const RadicalFract&)
	FUNCT  RadicalFract& operator+=(const RadicalFract&)
	FUNCT  RadicalFract operator-(const RadicalFract&)
	FUNCT  RadicalFract& operator-=(const RadicalFract&)
	FUNCT  RadicalFract operator*(const RadicalFract&)
	FUNCT  RadicalFract& operator*=(const RadicalFract&)
	FUNCT  RadicalFract operator/(const RadicalFract&)
	FUNCT  RadicalFract& operator/=(const RadicalFract&)
	FUNCT  void write(WORD)

STRUCT  MONOMIAL<T_int>:
	VAR  int degree
	VAR  T_int coefficient
	FUNCT  bool operator == (const MONOMIAL&)

CLASS  monomial<T_int>:
	VAR  T_int coefficient
	VAR  tensor<int> exp
	FUNCT  bool operator==(const monomial&)
	FUNCT  int degree()
	FUNCT  bool IsSquare()
	FUNCT  monomial Root(int)

CLASS  factor<T_int>:
	FUNCT  factor()
	FUNCT  factor(initializer_list<monomial<T_int>>)
	FUNCT  factor(size_t, const monomial<T_int>&)
	FUNCT  factor(size_t)
	FUNCT  factor(tensor<monomial<T_int>>)
	FUNCT  void SortByDegree()
	FUNCT  void SortByExponents()
	FUNCT  factor derivate(size_t)
	FUNCT  T_int operator()
	FUNCT  bool operator()
	FUNCT  inline factor neg()
	FUNCT  _NODISCARD wstring str(int)
	FUNCT  friend wostream& operator<<(wostream&, factor&)

CLASS  FACTOR<T_int>:
	FUNCT  FACTOR()
	FUNCT  FACTOR(initializer_list<MONOMIAL<T_int>>)
	FUNCT  FACTOR(size_t, const MONOMIAL<T_int>&)
	FUNCT  FACTOR(size_t)
	FUNCT  FACTOR(tensor<MONOMIAL<T_int>>)
	FUNCT  void sort()
	FUNCT  void complete(int)
	FUNCT  FACTOR derivate()
	FUNCT  T_int operator()
	FUNCT  inline FACTOR neg()
	FUNCT  _NODISCARD wstring str(int)
	FUNCT  friend wostream& operator<<(wostream&, const FACTOR&)

FUNCT  static factor<> ToXV(FACTOR<>)
FUNCT  static FACTOR<> To1V(factor<>)

CLASS  polynomial<T_int>:
	FUNCT  polynomial()
	FUNCT  polynomial(initializer_list<factor<T_int>>)
	FUNCT  polynomial(size_t, const factor<T_int>&)
	FUNCT  polynomial(size_t)
	FUNCT  polynomial(tensor<factor<T_int>>)
	FUNCT  void open()
	FUNCT  void close()
	FUNCT  _NODISCARD wstring str(int)
	FUNCT  friend wostream& operator<<(wostream&, polynomial&)

CLASS  POLYNOMIAL<T_int>:
	FUNCT  POLYNOMIAL()
	FUNCT  POLYNOMIAL(initializer_list<FACTOR<T_int>>)
	FUNCT  POLYNOMIAL(size_t, const FACTOR<T_int>&)
	FUNCT  POLYNOMIAL(size_t)
	FUNCT  POLYNOMIAL(tensor<FACTOR<T_int>>)
	FUNCT  void open()
	FUNCT  void close()
	FUNCT  _NODISCARD wstring str(int)
	FUNCT  friend wostream& operator<<(wostream&, const POLYNOMIAL&)

FUNCT  static polynomial<> ToXV(POLYNOMIAL<>)
FUNCT  static POLYNOMIAL<> To1V(polynomial<>)
FUNCT  static polynomial<> FromBigToDefault(polynomial<big>)
FUNCT  factor<T_int> factor<T_int>::operator<T_int>()
FUNCT  inline factor<T_int> factor<T_int>::operator-<T_int>(const factor&)
FUNCT  inline factor<T_int> factor<T_int>::operator*<T_int>(const factor&)
FUNCT  inline factor<T_int>& factor<T_int>::operator-=<T_int>(const factor&)
FUNCT  inline factor<T_int>& factor<T_int>::operator*=<T_int>(const factor&)
FUNCT  inline FACTOR<T_int> FACTOR<T_int>::operator-<T_int>(const FACTOR&)
FUNCT  inline FACTOR<T_int> FACTOR<T_int>::operator*<T_int>(const FACTOR&)
FUNCT  inline FACTOR<T_int>& FACTOR<T_int>::operator-=<T_int>(const FACTOR&)
FUNCT  inline FACTOR<T_int>& FACTOR<T_int>::operator*=<T_int>(const FACTOR&)

CLASS  Fraction<T>:
	VAR  polynomial<T> num
	VAR  polynomial<T> den
	FUNCT  Fraction()
	FUNCT  Fraction(polynomial<T>)
	FUNCT  Fraction(polynomial<T>, polynomial<T>)
	FUNCT  Fraction extend()
	FUNCT  Fraction derivate(size_t)
	FUNCT  Fraction operator+(const Fraction&)
	FUNCT  Fraction operator+=(const Fraction&)
	FUNCT  Fraction operator-(const Fraction&)
	FUNCT  Fraction operator-=(const Fraction&)
	FUNCT  Fraction operator*(const Fraction&)
	FUNCT  Fraction operator*=(const Fraction&)
	FUNCT  Fraction invert()
	FUNCT  Fraction operator/(const Fraction&)
	FUNCT  Fraction operator/=(const Fraction&)
	FUNCT  Fraction operator()
	FUNCT  T operator()
	FUNCT  bool operator==(const Fraction&)
	FUNCT  wstring str()
	FUNCT  friend wostream& operator<<(wostream&, const Fraction&)

CLASS  key:
	FUNCT  key(tensor<int>)
	FUNCT  key operator!()
	FUNCT  key operator~()
	FUNCT  _NODISCARD inline bool operator<(const tensor&)
	FUNCT  _NODISCARD inline bool operator<=(const tensor&)
	FUNCT  _NODISCARD inline bool operator>(const tensor&)
	FUNCT  _NODISCARD inline bool operator>=(const tensor&)

VAR  tensor<wstring> commands 
VAR  tensor<Expression> __Expr

CLASS  Expression:
	VAR  bool activator
	VAR  _STD map<key, wstring> terms
	VAR  tensor<key> lines
	VAR  tensor<key> lister
	VAR  tensor<COORD> FractionLinesPos
	VAR  tensor<short> FractionLinesLenght
	VAR  _STD map<key
	VAR  _STD COORD> dimensions
	VAR  _STD positions
	FUNCT  Expression()
	FUNCT  Expression& operator=(const Expression&)
	FUNCT  bool contains(key)
	FUNCT  void clean()
	FUNCT  tensor<key> underbranch(key)
	FUNCT  void Insert(key, wstring, wstring)
	FUNCT  void Remove(key)
	FUNCT  COORD GetDimensions(key)
	FUNCT  void GetPositions()
	FUNCT  bool out(COORD&)
	FUNCT  COORD CursorPosition(key)
	FUNCT  bool rewrite(COORD&, key, int)
	FUNCT  Fraction<ReturnedFractionType> in (switchcase&, wstring&, bool&, bool&)
	FUNCT  Fraction<ReturnedFractionType> Export (switchcase&, wstring&, bool&, bool&)

VAR  tensor_t PrimeNumbers
VAR  _STD map<int, wstring> CalculatedData

STRUCT  Console:
	VAR  wstring Text
	VAR  WORD Attribute
	FUNCT  void log()
	FUNCT  bool operator!=(const Console&)
	FUNCT  friend wostream& operator<<(wostream&, const Console&)

CLASS  ConsoleStream:
	FUNCT  ConsoleStream()
	FUNCT  ConsoleStream(initializer_list<Console>)
	FUNCT  ConsoleStream operator+(ConsoleStream)
	FUNCT  inline void output()
	FUNCT  inline void log()
	FUNCT  friend wostream& operator<<(wostream&, const ConsoleStream&)

VAR  ConsoleStream ConsoleText

CLASS  Matrix<_Ty>:
	FUNCT  Matrix()
	FUNCT  int output(COORD, int&, WORD)
	FUNCT  bool input(wstring&)
	FUNCT  void DisplayWith(const Matrix)
	FUNCT  void DisplayWith(const Matrix, const Matrix)
	FUNCT  Matrix operator+(const Matrix)
	FUNCT  Matrix operator+=(const Matrix)
	FUNCT  Matrix operator-(const Matrix)
	FUNCT  Matrix operator-=(const Matrix)
	FUNCT  tensor<_Ty> operator*(const tensor<_Ty>)
	FUNCT  Matrix operator*(const _Ty)
	FUNCT  Matrix& operator*=(const _Ty)
	FUNCT  Matrix operator*(const Matrix)
	FUNCT  Matrix& operator*=(const Matrix)
	FUNCT  T det<T>()
	FUNCT  Matrix invert(_Ty)
	FUNCT  tensor<double> EigenValues()
	FUNCT  Matrix EigenVectors(tensor<double>)

FUNCT  T EmptyProduct<T>(T)
VAR  HDC GHDC

CLASS  Point__:
	VAR  int ScreenX
	VAR  int ScreenY
	VAR  tensor<long double> Normal
	VAR  long double x
	VAR  long y
	VAR  long z
	FUNCT  Point__()
	FUNCT  Point__(long double, long double, long double)
	FUNCT  Point__(factor<>, long double, long double)
	FUNCT  Point__(Fraction<>, long double, long double)
	FUNCT  int GetScreenX()
	FUNCT  int GetScreenY()
	FUNCT  tensor<long double> GetNormalVector()
	FUNCT  bool Void()
	FUNCT  Point__& operator=(const Point__&)
	FUNCT  tensor<long double> SetNormalVector(Fraction<>, Fraction<>)
	FUNCT  void Display(int, COLORREF)
	FUNCT  void StdDisplay (Fraction<>, Fraction<>, Fraction<>, tensor<long double>)

FUNCT  bool isnan<T>(Fraction<T>)
FUNCT  bool isnan<T>(Matrix<T>)

CLASS  NumberData:
	VAR  ptrdiff_t number
	VAR  wstring code
	VAR  int degree
	VAR  wstring expression
	VAR  tensor<ptrdiff_t> sequence
	VAR  divisor div
	VAR  digitRatio digit
	FUNCT  strong_ordering operator<=>(const NumberData&)
	FUNCT  NumberData(ptrdiff_t, const wstring&, int, const wstring&, const tensor<ptrdiff_t>&, const divisor&, const digitRatio&)
	FUNCT  void printf()

VAR  tensor<wstring> Numbers
VAR  tensor<wstring> Polynomials
VAR  tensor<wstring> Expressions
VAR  tensor<tensor<wstring>> GlobalNumerators
VAR  tensor<tensor<wstring>> GlobalDenominators
VAR  tensor<tensor<wstring>> GlobalOperators
VAR  tensor<tensor<short>> ActionsList
FUNCT  int main()
FUNCT  static wstring Handler(wstring)
FUNCT  static size_t Factorial(size_t)
FUNCT  static size_t BinomialCoeff(size_t, size_t)
FUNCT  static ptrdiff_t Gcd(ptrdiff_t, ptrdiff_t)
FUNCT  static big Gcd(big, big)
FUNCT  static int Gcd<T>(tensor<T>)
FUNCT  static big Gcd(tensor<big>)
FUNCT  static ptrdiff_t intpow(ptrdiff_t, int)
FUNCT  inline static wstring ConvertEnumToWString(switchcase)
FUNCT  inline static switchcase ConvertWStringToEnum(wstring)
FUNCT  static void ReassigneEnum(switchcase&)

NAMESPACE  ConsoleLogData:
	VAR  int RotAngle
	VAR  int PolygDegree
	VAR  int PolygonSides
	VAR  int CircleCenterX
	VAR  int CircleCenterY
	VAR  int CircleRotDegreeAngle
	VAR  bool DecreaseAngle
	VAR  bool DecreaseWidth
	VAR  double DWidth
	VAR  const tensor<int> spectrum

FUNCT  static void ClearArea(COORD, COORD)
FUNCT  static void WriteFraction(wstring, wstring, wstring&, COORD)
FUNCT  static void PrintPFrame (double, int, double, COORD)
FUNCT  static void DrawFrame (int, double, int, int, double)
FUNCT  static void DrawCircleSquare(COORD)
FUNCT  inline static void CS_CenterPrinter()
FUNCT  inline static void CS_CornerPrinter()
FUNCT  static void ProgressBar(long double, double)
FUNCT  static long double WaitingScreen(auto, auto)
FUNCT  static wstring CTSuperScript(wchar_t)
FUNCT  static wstring CFSuperScript(wstring)
FUNCT  static wstring ElabExponents(wstring&)
FUNCT  static void DeduceFromExponents(wstring&)
FUNCT  static wstring GetLine(tensor<wstring>&, bool)
FUNCT  static wstring GetUserNum (wstring, ptrdiff_t, ptrdiff_t, bool)
FUNCT  static void SetDebug(wstring, switchcase&, bool&, ptrdiff_t&, ptrdiff_t&, ptrdiff_t&)
FUNCT  static void SendCtrlPlusMinus(bool)
FUNCT  static void SendString(wstring)
FUNCT  static void MonitorConsoleSize(COORD, atomic_bool&)
FUNCT  static void UserInputThread()
VAR  RECT ClientRect

NAMESPACE  WindowData:
	VAR  bool redo

	ENUM  states:
		ENUM_VAR  MIN
		ENUM_VAR  MAX
		VAR  H_FLX
		VAR  A_FLX
		VAR  D_FLX

	VAR  LPARAM Coords
	VAR  LPARAM Current
	VAR  bool enable
	VAR  double Zoom
	VAR  wchar_t __save
	VAR  int gIndex
	VAR  tensor<int> Indexlist
	VAR  int shiftX
	VAR  int shiftY
	VAR  tensor<tensor<int>> memory

	CLASS  DATA:
		VAR  COLORREF Color
		VAR  Fraction<> Function
		VAR  wstring ID
		VAR  tensor<int> States
		VAR  tensor<long double> StatX
		VAR  tensor<long StatY
		FUNCT  DATA()
		FUNCT  bool operator==(DATA)

	VAR  tensor<DATA> List
	FUNCT  DATA::DATA(Fraction<>)

NAMESPACE  Window3Data:

	ENUM  states:
		ENUM_VAR  MINIMUM
		ENUM_VAR  MAXIMUM
		ENUM_VAR  SADDLE
		ENUM_VAR  UNKNOWN

	VAR  tensor<int> def
	VAR  tensor<int> Light
	VAR  double Zoom
	VAR  bool enable
	VAR  LPARAM Coords{}, Current
	VAR  tensor<long double> StatX, StatY, StatZ
	VAR  Fraction<> Function, PartialXder, PartialYder
	VAR  auto Theta
	VAR  auto Phi

FUNCT  static void DrawLine(int, int, int, int, HPEN)
FUNCT  static void DrawLineToBuffer(HDC, HBITMAP, int, int, int, int, HPEN)
FUNCT  static void DrawLine(Point__, Point__, HPEN)
FUNCT  static void DrawLineToBuffer (HDC, HBITMAP, Point__, Point__, HPEN)
FUNCT  static void IncrementCalculator(double, double&, double&)
FUNCT  static void ProjectPoint(tensor<long double>, int&, int&)
FUNCT  static void ProjectAndDrawLine (tensor<long double>, tensor<long double>, HPEN)
FUNCT  static void DrawAxis(HDC, HBITMAP, double, double)
FUNCT  static LRESULT CALLBACK WindowProcessor2D(HWND, UINT, WPARAM, LPARAM)
FUNCT  static BOOL CreateGraph(Fraction<>)
FUNCT  static LRESULT CALLBACK WindowProcessor3D(HWND, UINT, WPARAM, LPARAM)
FUNCT  static void Project3DGraph(Fraction<>)
FUNCT  static bool Prime(ptrdiff_t)
FUNCT  static void PrimeNCalculator(ptrdiff_t, ptrdiff_t)
FUNCT  static tensor<compost> DecomposeNumber(ptrdiff_t)
FUNCT  static tensor<int> DecomposeStrings(wstring)
FUNCT  static tensor<wstring> Fractioner(wstring)
FUNCT  static tensor<tensor<wstring>> FractPolynomial(wstring)
FUNCT  static wstring Cript(ptrdiff_t)
FUNCT  static wstring FactNumber(ptrdiff_t)
FUNCT  static int ExeStrings(wstring)
FUNCT  static divisor DivisorCalculator(wstring)
FUNCT  static digitRatio DigitRationalizer(ptrdiff_t)
FUNCT  static tensor<int> DivisorCounter(int)
FUNCT  static NumberData ExecuteSimpledeg(ptrdiff_t)
FUNCT  static NumberData ExecuteDegree(ptrdiff_t)
FUNCT  static NumberData ExecuteSimpleFact(ptrdiff_t)
FUNCT  static NumberData ExecuteFactor(ptrdiff_t)
FUNCT  static NumberData ExecuteSimpleDF(ptrdiff_t)
FUNCT  static NumberData ExecuteDigit(ptrdiff_t)
FUNCT  static NumberData ExecuteDegFactor(ptrdiff_t)
FUNCT  static NumberData ExecuteDegDigit(ptrdiff_t)
FUNCT  static NumberData ExecuteFactDigit(ptrdiff_t)
FUNCT  static NumberData ExecuteAll(ptrdiff_t)
FUNCT  static wstring PolynomialSyntax(wstring)
FUNCT  static wstring PolynomialSyntaxDirector(wstring)
FUNCT  static wstring UpdateString(wstring&)
FUNCT  static wstring NumberCodeSyntax(wstring)
FUNCT  static ptrdiff_t NumberConverter(size_t, wstring)
FUNCT  static ptrdiff_t StringConverter(wstring)
FUNCT  static void CodeConverter (wstring, wstring, bool, bool)
FUNCT  static void LongComputation (wstring, wstring, bool, bool)
FUNCT  static factor<big> GetMonomials(wstring)
FUNCT  static polynomial<big> GetMonomialsRedirector(wstring)
FUNCT  static polynomial<big> GetMonomialsAssister(wstring)
FUNCT  T ObjectOperations<T>(wstring&, tensor<T>, tensor<wstring>, wstring)
FUNCT  static tensor<tensor<long double>> FromPolynomialToPos(factor<>, int&, tensor<int>&, tensor<int>&, tensor<int>&, tensor<tensor<int>>&, tensor<tensor<int>>&)
FUNCT  static factor<T_int> PolynomialSum<T_int>(factor<T_int>)
FUNCT  static factor<T_int> PolynomialMultiply<T_int>(polynomial<T_int>)
FUNCT  static void PolynomialDivide (FACTOR<>, FACTOR<>, FACTOR<>&, FACTOR<>&)
FUNCT  static polynomial<> Total(factor<>)
FUNCT  static polynomial<> Partial(factor<>)
FUNCT  static polynomial<> Binomial(factor<>)
FUNCT  static polynomial<> Trinomial(factor<>)
FUNCT  static polynomial<> SquareDifference(factor<>)
FUNCT  static polynomial<> Ruffini(factor<>)
FUNCT  static polynomial<> CompleteTheSquare(factor<>)
FUNCT  static polynomial<> TrinomialSquare(factor<>)
FUNCT  static tensor<Fraction<big>> GetManyFractions (tensor<wstring>, tensor<wstring>, wstring&)
FUNCT  static FACTOR<> Complementary(POLYNOMIAL<>, FACTOR<>, int)
FUNCT  static void Simplify(Fraction<>&, int&, int&)
FUNCT  static void PrintFraction (int, int, int&, bool, Fraction<>)
FUNCT  static void PrintFractionaryResult (int, int, int&, Fraction<>, POLYNOMIAL<>, POLYNOMIAL<>, bool, bool, tensor<double>, tensor<POLYNOMIAL<>>)
FUNCT  static void Approximator(tensor<long double>&, long double&)
FUNCT  static tensor<wstring> EquationSolver(factor<>)
FUNCT  static tensor<tensor<long double>> SystemSolver(tensor<factor<>>)
FUNCT  static tensor<long double> RootExtractor(polynomial<>)
FUNCT  static void FractDisequationMain(polynomial<>, polynomial<>, tensor<wstring>&, tensor<bool>&, bool&, bool&)
FUNCT  static ConsoleStream GetAlgebricSolution(tensor<wstring>, tensor<bool>, bool, bool, bool)
FUNCT  static bool ParamDisequationSetup(polynomial<>&, polynomial<>&, polynomial<>&, tensor<bool>&, tensor<long double>&, factor<>&, tensor<factor<>>&, tensor<factor<>>&, bool&, bool&)
FUNCT  static void ParamDisequationMain(polynomial<>, tensor<factor<>>, tensor<factor<>>, tensor<long double>, size_t&, tensor<tensor<factor<>>>&, tensor<long double>&, tensor<long double>&, tensor<wstring>&)
FUNCT  static ConsoleStream GetParametricSolution(wchar_t, size_t, size_t, bool, bool, bool, tensor<bool>, polynomial<>&, polynomial<>&, factor<>, tensor<factor<>>, tensor<factor<>>, tensor<tensor<factor<>>>, tensor<long double>, tensor<long double>, tensor<wstring>)
FUNCT  static ConsoleStream DisequationSolutionPrinter(polynomial<>, polynomial<>, int, bool, bool)
FUNCT  static void CodeToNumber(switchcase&)
VAR  tensor<tensor<wstring>> Map
FUNCT  static wstring ExpandNumber(switchcase&, big, int, bool)
FUNCT  static void Repeater(switchcase&, wstring, NumberData)
FUNCT  static void Loop(switchcase&, wstring, NumberData, bool)
FUNCT  static polynomial<> DecompPolynomial<Type>(switchcase&, Type)
FUNCT  static void DecompAndSolve(switchcase&)
FUNCT  static void DecompMatrices(switchcase&)
